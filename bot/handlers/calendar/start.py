import datetime
import logging
import os

from aiogram import F, Router, types
from aiogram.filters import StateFilter, or_f
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import ReplyKeyboardRemove, CallbackQuery

from keyboards.calendar import (
    start_calendar_keyboard,
    start_manual_calendar_keyboard,
)
from utils.database_api import DatabaseAPI


logger = logging.getLogger('aiogram')
logger.setLevel(logging.DEBUG)

router = Router()
api = DatabaseAPI()


class StartCalendar(StatesGroup):
    start_calendar = State()
    start_manual_calendar = State()


class ShowVoiceEvents(StatesGroup):
    waiting_events_show_end = State()


@router.message(F.text.casefold() == '–º–æ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å')
async def start_calendar_handler(message: types.Message, state: FSMContext) -> None:
    await message.answer(
        "–ó–∞–ø–∏—à–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üéôÔ∏è, —á—Ç–æ–±—ã:\n"
        "‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ\n"
        "üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –≤—Å—Ç—Ä–µ—á–∏\n"
        "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–æ–±—ã—Ç–∏—è\n"
        "–ü–µ—Ä–µ–π–¥–∏ –≤ ‚úã –º–∞–Ω—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏.",
        reply_markup=start_calendar_keyboard()
    )
    await state.clear()
    await state.set_state(StartCalendar.start_calendar)


@router.message(
    or_f(
        StateFilter(StartCalendar.start_calendar),
        StateFilter(ShowVoiceEvents.waiting_events_show_end)
    ),
    F.text.casefold() == '–º–∞–Ω—É–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º'
)
async def start_manual_calendar_handler(message: types.Message, state: FSMContext) -> None:
    await message.answer(
        "–¢–µ–ø–µ—Ä—å —Ç—ã –≤ –º–∞–Ω—É–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ.\n"
        "–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ",
        reply_markup=start_manual_calendar_keyboard()
    )
    await state.set_state(StartCalendar.start_manual_calendar)


def setup_calendar_start_handlers(dp):
    dp.include_router(router)
